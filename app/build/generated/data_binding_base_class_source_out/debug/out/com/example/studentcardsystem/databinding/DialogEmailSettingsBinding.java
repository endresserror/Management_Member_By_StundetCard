// Generated by view binder compiler. Do not edit!
package com.example.studentcardsystem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.studentcardsystem.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogEmailSettingsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button cancelButton;

  @NonNull
  public final TextInputEditText emailAddressInput;

  @NonNull
  public final TextInputEditText emailBodyTemplateInput;

  @NonNull
  public final TextInputEditText emailDomainInput;

  @NonNull
  public final TextInputEditText passwordInput;

  @NonNull
  public final RadioButton radioGmailApp;

  @NonNull
  public final RadioButton radioSmtp;

  @NonNull
  public final Button saveButton;

  @NonNull
  public final RadioGroup sendMethodGroup;

  @NonNull
  public final LinearLayout smtpSettingsLayout;

  @NonNull
  public final TextInputEditText subjectInput;

  private DialogEmailSettingsBinding(@NonNull LinearLayout rootView, @NonNull Button cancelButton,
      @NonNull TextInputEditText emailAddressInput,
      @NonNull TextInputEditText emailBodyTemplateInput,
      @NonNull TextInputEditText emailDomainInput, @NonNull TextInputEditText passwordInput,
      @NonNull RadioButton radioGmailApp, @NonNull RadioButton radioSmtp,
      @NonNull Button saveButton, @NonNull RadioGroup sendMethodGroup,
      @NonNull LinearLayout smtpSettingsLayout, @NonNull TextInputEditText subjectInput) {
    this.rootView = rootView;
    this.cancelButton = cancelButton;
    this.emailAddressInput = emailAddressInput;
    this.emailBodyTemplateInput = emailBodyTemplateInput;
    this.emailDomainInput = emailDomainInput;
    this.passwordInput = passwordInput;
    this.radioGmailApp = radioGmailApp;
    this.radioSmtp = radioSmtp;
    this.saveButton = saveButton;
    this.sendMethodGroup = sendMethodGroup;
    this.smtpSettingsLayout = smtpSettingsLayout;
    this.subjectInput = subjectInput;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogEmailSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogEmailSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_email_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogEmailSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancelButton;
      Button cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.emailAddressInput;
      TextInputEditText emailAddressInput = ViewBindings.findChildViewById(rootView, id);
      if (emailAddressInput == null) {
        break missingId;
      }

      id = R.id.emailBodyTemplateInput;
      TextInputEditText emailBodyTemplateInput = ViewBindings.findChildViewById(rootView, id);
      if (emailBodyTemplateInput == null) {
        break missingId;
      }

      id = R.id.emailDomainInput;
      TextInputEditText emailDomainInput = ViewBindings.findChildViewById(rootView, id);
      if (emailDomainInput == null) {
        break missingId;
      }

      id = R.id.passwordInput;
      TextInputEditText passwordInput = ViewBindings.findChildViewById(rootView, id);
      if (passwordInput == null) {
        break missingId;
      }

      id = R.id.radioGmailApp;
      RadioButton radioGmailApp = ViewBindings.findChildViewById(rootView, id);
      if (radioGmailApp == null) {
        break missingId;
      }

      id = R.id.radioSmtp;
      RadioButton radioSmtp = ViewBindings.findChildViewById(rootView, id);
      if (radioSmtp == null) {
        break missingId;
      }

      id = R.id.saveButton;
      Button saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.sendMethodGroup;
      RadioGroup sendMethodGroup = ViewBindings.findChildViewById(rootView, id);
      if (sendMethodGroup == null) {
        break missingId;
      }

      id = R.id.smtpSettingsLayout;
      LinearLayout smtpSettingsLayout = ViewBindings.findChildViewById(rootView, id);
      if (smtpSettingsLayout == null) {
        break missingId;
      }

      id = R.id.subjectInput;
      TextInputEditText subjectInput = ViewBindings.findChildViewById(rootView, id);
      if (subjectInput == null) {
        break missingId;
      }

      return new DialogEmailSettingsBinding((LinearLayout) rootView, cancelButton,
          emailAddressInput, emailBodyTemplateInput, emailDomainInput, passwordInput, radioGmailApp,
          radioSmtp, saveButton, sendMethodGroup, smtpSettingsLayout, subjectInput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
