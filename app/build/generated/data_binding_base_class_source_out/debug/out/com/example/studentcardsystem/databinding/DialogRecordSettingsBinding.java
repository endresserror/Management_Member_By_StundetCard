// Generated by view binder compiler. Do not edit!
package com.example.studentcardsystem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.studentcardsystem.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogRecordSettingsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextInputEditText customTypeInput;

  @NonNull
  public final LinearLayout customTypeLayout;

  @NonNull
  public final TextInputEditText eventNameInput;

  @NonNull
  public final RadioButton radioAttendance;

  @NonNull
  public final RadioButton radioOther;

  @NonNull
  public final RadioButton radioPayment;

  @NonNull
  public final RadioGroup recordTypeGroup;

  private DialogRecordSettingsBinding(@NonNull LinearLayout rootView,
      @NonNull TextInputEditText customTypeInput, @NonNull LinearLayout customTypeLayout,
      @NonNull TextInputEditText eventNameInput, @NonNull RadioButton radioAttendance,
      @NonNull RadioButton radioOther, @NonNull RadioButton radioPayment,
      @NonNull RadioGroup recordTypeGroup) {
    this.rootView = rootView;
    this.customTypeInput = customTypeInput;
    this.customTypeLayout = customTypeLayout;
    this.eventNameInput = eventNameInput;
    this.radioAttendance = radioAttendance;
    this.radioOther = radioOther;
    this.radioPayment = radioPayment;
    this.recordTypeGroup = recordTypeGroup;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogRecordSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogRecordSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_record_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogRecordSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.customTypeInput;
      TextInputEditText customTypeInput = ViewBindings.findChildViewById(rootView, id);
      if (customTypeInput == null) {
        break missingId;
      }

      id = R.id.customTypeLayout;
      LinearLayout customTypeLayout = ViewBindings.findChildViewById(rootView, id);
      if (customTypeLayout == null) {
        break missingId;
      }

      id = R.id.eventNameInput;
      TextInputEditText eventNameInput = ViewBindings.findChildViewById(rootView, id);
      if (eventNameInput == null) {
        break missingId;
      }

      id = R.id.radioAttendance;
      RadioButton radioAttendance = ViewBindings.findChildViewById(rootView, id);
      if (radioAttendance == null) {
        break missingId;
      }

      id = R.id.radioOther;
      RadioButton radioOther = ViewBindings.findChildViewById(rootView, id);
      if (radioOther == null) {
        break missingId;
      }

      id = R.id.radioPayment;
      RadioButton radioPayment = ViewBindings.findChildViewById(rootView, id);
      if (radioPayment == null) {
        break missingId;
      }

      id = R.id.recordTypeGroup;
      RadioGroup recordTypeGroup = ViewBindings.findChildViewById(rootView, id);
      if (recordTypeGroup == null) {
        break missingId;
      }

      return new DialogRecordSettingsBinding((LinearLayout) rootView, customTypeInput,
          customTypeLayout, eventNameInput, radioAttendance, radioOther, radioPayment,
          recordTypeGroup);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
